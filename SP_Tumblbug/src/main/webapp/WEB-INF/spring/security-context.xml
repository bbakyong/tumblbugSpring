<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
		
	<bean id="bCryptPasswordEncoder"  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>	
	<!-- 에러 : spring-security-4.2.xsd 수정. -->	
	 		
	<security:http pattern="/static/**" security="none"></security:http>	
	<security:http pattern="/design/**" security="none"></security:http>	
	<security:http pattern="/css/**" security="none" />	
	<security:http pattern="/js/**" security="none" />	 
	
	<security:http use-expressions="true"> 

		<security:csrf disabled="true"/>

		<!-- 접근권한 설정 태그 --> 
	    <!-- 예 
	   <security:intercept-url pattern="/user/loginForm.htm" access="permitAll"/>
	   <security:intercept-url pattern="/admin/manager/**" access="hasAutority('ROLE_MANAGER')"/>
	   <security:intercept-url pattern="/member/**" access="isAuthenticated()"/>
	   <security:intercept-url pattern="/**" access="permitAll"/>
	    -->
	    <security:intercept-url pattern="/tumblbug/manager.do" access="hasRole('ROLE_MANAGER')"/>
		<security:intercept-url pattern="/tumblbug/makeProject.do" access="isAuthenticated()"/> 	
 	    <security:intercept-url pattern="/tumblbug/pay.do" access="isAuthenticated()"/> 
<!-- 	    <security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_MANAGER')"/> -->
	    <security:intercept-url pattern="/**" access="permitAll"/>
		
		   <!-- 에러 메시지 보다는 접근 금지에 대한 특정 페이지로 이동하도록 지정
	    <security:access-denied-handler error-page="/common/accessError.do" />
	     -->
	     <security:access-denied-handler ref="customAccessDeniedHandler" />
	
	   <!-- <security:form-login/> -->  
	   
	    <!-- 사용자 정의 로그인 페이지 등록 속성 : login-page -->
	   <security:form-login 
	        login-page="/tumblbug/login.do"
	        authentication-success-handler-ref="customLoginSuccessHandler"	       
	        authentication-failure-url="/tumblbug/login.do?error=true"
	        />
	   <!--  default-target-url="/tumblbug/main.do" -->
	   
	     <security:logout logout-url="/tumblbug/logout.do" 
	  				 logout-success-url="/tumblbug/main.do"  invalidate-session="true" />
	   
	</security:http>	
		
	<!-- <security:authentication-manager> 
	  <security:authentication-provider user-service-ref="customUserDetailsService">
	    
	    <security:jdbc-user-service 
	      data-source-ref="dataSource"
	      users-by-username-query="SELECT id AS USERNAME, pwd AS PASSWORD, enabled FROM member WHERE id = ?"
	      authorities-by-username-query="SELECT username AS userid, authority AS auth FROM member_authorities WHERE username = ?  " 
	       />   
	       
	    <security:password-encoder ref="bCryptPasswordEncoder" />
	  </security:authentication-provider>
	</security:authentication-manager> -->
	
	
	<security:authentication-manager> 
		<security:authentication-provider user-service-ref="customUserDetailsService"> 
	<!--  	<security:jdbc-user-service data-source-ref="dataSource"
		users-by-username-query="SELECT m_email AS USERNAME, m_password AS PASSWORD, enabled FROM member WHERE m_email = ?" 
	      authorities-by-username-query="SELECT username AS userid, authority AS auth FROM member_authorities WHERE username = ?  "/>
			-->
			<!-- <security:user-service>
				<security:user name="jinyong@naver.com" authorities="ROLE_USER" password="{noop}qwe1234"/>
				<security:user name="admin" authorities="ROLE_USER, ROLE_ADMIN, ROLE_MANAGER" password="{noop}1234"/>
			</security:user-service> -->
<!-- 			</security:user-service> -->
			<security:password-encoder ref="bCryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager> 

 
</beans>
